import time
from pprint import pprint

import bittrex
import bot_class
import requests


TOKEN = '739770367:AAFlprJWibNhoZ6Yw-8N4RW-0zsbUeXkGD0'
# –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è update_id
log_msg = 'msg_log.txt'  # —Ñ–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ id —Å–æ–æ–±—â–µ–Ω–∏—è
log_open_buy_order = 'buy_order_log.txt'  # —Ñ–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–∫—Ä—ã—Ç—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤ –Ω–∞ –ø–æ–∫—É–ø–∫—É

# –°–≤–æ–π –∫–ª–∞—Å—Å –∏—Å–∫–ª—é—á–µ–Ω–∏–π
class ScriptError(Exception):
    pass


# –∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ update_id –∏–∑ —Ñ–∞–π–ª–∞
def load_last_msg(filename):
    with open(filename) as f:
        last_msg = int(f.readlines()[-1].rstrip())
    return last_msg


# –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞
def load_text(filename):
    text = []
    with open(filename) as f:
        for line in f.readlines():
            text.append(line.rstrip())
    return text


# —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª
def save_text(filename, type, *args):
    with open(filename, type) as f:
        f.write(str(*args) + '\n')


# –í—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ—Ä–¥–µ—Ä–æ–≤ –ø–æ —Ä–µ–ø–æ—Å—Ç—É —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —á–∞—Ç–∞ Forstage team
def signals_from_fostage(update):
    try:

        if bot.from_chat_id(update) == -1001149814828:  # id_chat Forstage team
            msg_text = update['message']['text'].split()
            if '–ü–æ–∫—É–ø–∫–∞' in msg_text[1][1:]:
                pair = msg_text[0].strip('üèé').split('/')
                pair = pair[1] + '-' + pair[0]

                buy_text = msg_text[2][:-1]
                sell_1_text = msg_text[4][:-1]
                sell_2_text = msg_text[6][:-1]
                sell_3_text = msg_text[8][:-1]
                bot.send_message(bot.get_chat_id(update),
                                 f'{pair} –∫—É–ø–∏—Ç—å –ø–æ {buy_text}, —Ü–µ–ª–∏: {sell_1_text}, {sell_2_text}, {sell_3_text}')

                buy = float(buy_text)
                sell_1 = float(sell_1_text)
                sell_2 = float(sell_2_text)
                sell_3 = float(sell_3_text)

                if pair in bittrex.all_markets():  # –µ—Å–ª–∏ –ø–∞—Ä–∞ –µ—Å—Ç—å –Ω–∞ –±–∏—Ä–∂–µ Bittrex
                    bot.send_message(bot.get_chat_id(update), '–£–†–ê! –≠—Ç–∞ –ø–∞—Ä–∞ –µ—Å—Ç—å –Ω–∞ –ë–∏—Ç—Ç—Ä–µ–∫—Å!')

                    buy = buy / 2  # –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ —Ü–µ–Ω–∞ –æ—Ä–¥–µ—Ä–∞ —É–º–µ–Ω—å—à–∏–Ω–∞ –≤ 2 —Ä–∞–∑–∞, —á—Ç–æ–±—ã –æ—Ä–¥–µ—Ä –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª
                    # quantity = float(bittrex.balance_btc(
                    #     'BTC')) * 0.04 / buy  # 0.04 - –æ—Ä–¥–µ—Ä –Ω–∞ 4% –æ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞ BTC
                    quantity = 0.0005 / buy  # –æ—Ä–¥–µ—Ä –Ω–∞ —Å—É–º–º—É 0.0005 BTC
                    buy_order, text_buy = bittrex.buylimit(pair, buy, quantity)

                    if buy_order['success']:
                        print(buy_order['result']['uuid'])
                        save_text(log_open_buy_order, 'a', buy_order['result']['uuid'])  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
                    bot.send_message(bot.get_chat_id(update),
                                     f'{text_buy} –æ—Ä–¥–µ—Ä –Ω–∞ –ø–æ–∫—É–ø–∫—É {pair.split("-")[1]} '
                                     f'\n–ø–æ —Ü–µ–Ω–µ: {buy:.8f}\n–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {quantity:.8f} ')

            else:
                # print('–ù–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–∏–≥–Ω–∞–ª–∞')
                bot.send_message(bot.get_chat_id(update), '–ù–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–∏–≥–Ω–∞–ª–∞')
        else:
            bot.send_message(bot.get_chat_id(update), '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑ —á–∞—Ç–∞ Forsage Team')
    except KeyError:
        print('–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑ —á–∞—Ç–∞ Forsage Team')


if __name__ == '__main__':



    # —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞
    bot = bot_class.BotHandler(TOKEN)


    # –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
    while True:

        # try:
        # –ø–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, offset=<id last message>, last=True - –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        update = bot.get_updates(offset=load_last_msg(log_msg), last=True)
        buy_order_list = load_text(log_open_buy_order)  # —Å–ø–∏—Å–æ–∫ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤
        print(buy_order_list)
        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª–µ–Ω–∏—è/–æ—Ç–º–µ–Ω—ã –æ—Ä–¥–µ—Ä–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É

        buy_order_list, closed_order_list = bittrex.del_closed_order(buy_order_list)
        print(buy_order_list, closed_order_list)
        save_text(log_open_buy_order, 'w', *buy_order_list)

        if update['update_id'] == load_last_msg(log_msg):
            pass
        else:
            print('–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –î–æ–±–∞–≤–ª—è–µ–º –≤ –±–∞–∑—É.')
            save_text(log_msg, update['update_id'])
            signals_from_fostage(update)

        print('–ù–æ–≤—ã–π —Ü–∏–∫–ª')
        time.sleep(1)
        # except Exception as e:
        #     print(e)
